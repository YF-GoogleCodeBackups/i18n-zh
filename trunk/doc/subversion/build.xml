<?xml version="1.0" encoding="UTF-8"?>
<!--
用法：
    生成 html 输出格式：ant html
    生成 pdf  输出格式：ant pdf
    生成 所有 输出格式：ant all

依赖：
    *) python 2.4+
    *) python-libxml2 2.6.27+
    *) xsltproc 1.1.20+
    *) gettext 0.16+
    *) jdk 1.4.2+

说明：
    *) 安装依赖软件包
    *) 根据本机配置修改 build.tmpl.properties，生成 build.properties
    *) 开始构建 ...

计划：
    *) 增加多语言支持
    *) 增加 chm 输出支持，它只能在 Windows 中构建，是否必要？
    *) ...

作者：
    *) Dongsheng Song <dongsheng.song@gmail.com>, 2007

-->
<project name="docbook" default="html">

    <!-- 加载属性文件 -->
    <!-- 注意：它由你根据自己的配置修改 build.tmpl.properties 而来 -->
    <property file="build.properties"/>

    <!-- 设置 DocBook 样式表 -->
    <property name="db.style.fopdf"         value="${base.dir}/xsl/fo.xsl"/>
    <property name="db.style.fopdf.zh_CN"   value="${base.dir}/xsl/zh_CN/fo.xsl"/>
    <property name="db.style.html.style"    value="${base.dir}/xsl/styles.css"/>
    <property name="db.style.html"          value="${base.dir}/xsl/html.xsl"/>

    <!-- 配置 fop 的类路径 -->
    <path id="lib.classpath">
        <fileset dir="${fop.dir}/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <!-- 生成所有文档格式 -->
    <target name="all" depends="clean">
        <antcall target="html"/>
        <antcall target="pdf"/>
    </target>

    <!-- 删除构建产生的中间文件，和最终输出的文件 -->
    <target name="clean">
        <delete dir="${base.dir}/build"/>
        <delete file="${source.dir}/en/book/version.xml"/>
    </target>

    <!-- 根据模版文件 version.tmpl.xml，生成 version.xml -->
    <target name="version">
        <!-- Generate src/en/book/version.xml. -->
        <tstamp>
            <format property="build.time" pattern="yyyy-MM-dd HH:mm:ss Z"/>
        </tstamp>
        <exec dir="${source.dir}" executable="svnversion" outputproperty="build.version"/>
        <filter token="build.version" value="${build.version}"/>
        <filter token="build.time" value="${build.time}"/>
        <copy file="version.tmpl.xml" tofile="${source.dir}/en/book/version.xml" filtering="true" overwrite="true"/>
    </target>

    <!-- 将英文源文件合并，产生一个独立的源文件 -->
    <target name="profile" depends="version">
        <mkdir dir="${base.dir}/build/en"/>
        <exec dir="${base.dir}" executable="xsltproc">
            <arg value="--nonet"/>
            <arg value="--xinclude"/>
            <arg value="--output"/>
            <arg value="${base.dir}/build/en/book.xml"/>
            <arg value="${base.dir}/xsl/profile.xsl"/>
            <arg value="${source.dir}/en/book/book.xml"/>
        </exec>
    </target>

    <!-- 检查 pot 文件是否过时 -->
    <target name="pot.init" unless="pot.isUpToDate" >
        <uptodate property="pot.isUpToDate" targetfile="${base.dir}/po/book.pot">
            <srcfiles dir="${source.dir}/en/book" includes="*.xml" excludes="version.xml"/>
        </uptodate>
    </target>

    <!-- 根据英文源文件生成 pot 文件，合并中文翻译 -->
    <!-- 此任务在我的 PM-1.73 上耗时 6 分钟 -->
    <target name="pot" depends="pot.init,profile" unless="pot.isUpToDate" >
        <exec dir="${base.dir}" executable="python">
            <arg value="xml2po.py"/>
            <arg value="-e"/>
            <arg value="-o"/>
            <arg value="${base.dir}/po/book.pot"/>
            <arg value="${base.dir}/build/en/book.xml"/>
        </exec>
        <exec dir="${base.dir}" executable="msgmerge">
            <arg value="--no-wrap"/>
            <arg value="-F"/>
            <arg value="-o"/>
            <arg value="${base.dir}/po/zh.po.new"/>
            <arg value="${base.dir}/po/zh.po"/>
            <arg value="${base.dir}/po/book.pot"/>
        </exec>
        <move file="${base.dir}/po/zh.po.new" tofile="${base.dir}/po/zh.po"/>
    </target>

    <!-- 检查中文 DocBook 文件是否过时 -->
    <target name="translate.init" depends="pot">
        <uptodate property="translate.isUpToDate" srcfile="${base.dir}/po/zh.po" targetfile="${base.dir}/build/zh/book.xml"/>
    </target>

    <!-- 根据英文源文件和中文 po 文件，产生中文 DocBook 文件 -->
    <!-- 此任务在我的 PM-1.73 上耗时 30 秒 -->
    <target name="translate" depends="translate.init" unless="translate.isUpToDate" >
        <mkdir dir="${base.dir}/build/zh"/>
        <exec dir="${base.dir}" executable="msgfmt">
            <arg value="${base.dir}/po/zh.po"/>
            <arg value="-o"/>
            <arg value="${base.dir}/build/zh/book.mo"/>
        </exec>
        <exec dir="${base.dir}" executable="python">
            <arg value="xml2po.py"/>
            <arg value="-l"/>
            <arg value="zh-cn"/>
            <arg value="-t"/>
            <arg value="${base.dir}/build/zh/book.mo"/>
            <arg value="-o"/>
            <arg value="${base.dir}/build/zh/book.xml"/>
            <arg value="${base.dir}/build/en/book.xml"/>
        </exec>
    </target>

    <!-- 根据中文 DocBook 文件和样式表生成中文 html 文件 -->
    <!-- 此任务在我的 PM-1.73 上耗时 30 秒 -->
    <target name="html" depends="translate">

        <delete dir="${base.dir}/build/zh/html"/>
        <mkdir dir="${base.dir}/build/zh/html"/>

        <exec dir="${base.dir}/build/zh/html" executable="xsltproc">
            <arg value="--nonet"/>
            <arg value="--xinclude"/>
            <arg value="${db.style.html}"/>
            <arg value="${base.dir}/build/zh/book.xml"/>
        </exec>

        <copy file="${db.style.html.style}" todir="${base.dir}/build/zh/html"/>
        <copy todir="${base.dir}/build/zh/html/images">
            <fileset dir="${source.dir}/en/book/images" excludes="**/.svn, **/*.ppt"/>
        </copy>
    </target>

    <!-- 根据中文 DocBook 文件和样式表生成中文 pdf 文件 -->
    <!-- 此任务在我的 PM-1.73 上耗时 15 秒 -->
    <target name="pdf" depends="translate">

        <copy todir="${base.dir}/build/zh/pdf/images">
            <fileset dir="${source.dir}/zh/book/images">
                <include name="**/*.png"/>
                <include name="**/*.svg"/>
                <include name="**/*.gif"/>
            </fileset>
        </copy>

        <copy todir="${base.dir}/build/zh/pdf">
            <fileset dir="${fonts.dir}">
                <include name="*"/>
            </fileset>
        </copy>

        <exec dir="${base.dir}" executable="xsltproc">
            <arg value="--nonet"/>
            <arg value="--xinclude"/>
            <arg value="--output"/>
            <arg value="${base.dir}/build/zh/pdf/${doc.name}.fo"/>
            <arg value="${db.style.fopdf.zh_CN}"/>
            <arg value="${base.dir}/build/zh/book.xml"/>
        </exec>

        <java classname="org.apache.fop.apps.Fop" fork="true" dir="${base.dir}" maxmemory="512m" >
            <classpath refid="lib.classpath"/>
            <arg value="-c"/>
            <arg value="${fonts.dir}/userconfig.xml"/>
            <arg value="${base.dir}/build/zh/pdf/${doc.name}.fo"/>
            <arg value="${base.dir}/build/zh/pdf/${doc.name}.pdf"/>
        </java>

        <delete>
            <fileset dir="${base.dir}/build/zh/pdf" excludes="**/*.pdf, **/*.fo"/>
        </delete>
        <delete dir="${base.dir}/build/zh/pdf/images"/>
    </target>

    <!-- 根据英文 DocBook 文件和样式表生成英文 html 文件 -->
    <target name="html.en" depends="version">
        <delete dir="${base.dir}/build/en/html"/>
        <mkdir dir="${base.dir}/build/en/html"/>

        <exec dir="${base.dir}/build/en/html" executable="xsltproc">
            <arg value="--nonet"/>
            <arg value="--xinclude"/>
            <arg value="${db.style.html}"/>
            <arg value="${source.dir}/en/book/book.xml"/>
        </exec>

        <copy file="${db.style.html.style}" todir="${base.dir}/build/en/html"/>
        <copy todir="${base.dir}/build/en/html/images">
            <fileset dir="${source.dir}/en/book/images" excludes="**/.svn, **/*.ppt"/>
        </copy>
    </target>

    <!-- 根据英文 DocBook 文件和样式表生成英文 pdf 文件 -->
    <target name="pdf.en" depends="profile">

        <copy todir="${base.dir}/build/en/pdf/images">
            <fileset dir="${source.dir}/en/book/images">
                <include name="**/*.png"/>
                <include name="**/*.svg"/>
                <include name="**/*.gif"/>
            </fileset>
        </copy>

        <exec dir="${base.dir}" executable="xsltproc">
            <arg value="--nonet"/>
            <arg value="--xinclude"/>
            <arg value="--output"/>
            <arg value="${base.dir}/build/en/pdf/${doc.name}.fo"/>
            <arg value="${db.style.fopdf}"/>
            <arg value="${base.dir}/build/en/book.xml"/>
        </exec>

        <java classname="org.apache.fop.apps.Fop" fork="true" dir="${base.dir}" maxmemory="512m" >
            <classpath refid="lib.classpath"/>
            <arg value="${base.dir}/build/en/pdf/${doc.name}.fo"/>
            <arg value="${base.dir}/build/en/pdf/${doc.name}.pdf"/>
        </java>

        <delete>
            <fileset dir="${base.dir}/build/en/pdf" excludes="**/*.pdf, **/*.fo"/>
        </delete>
        <delete dir="${base.dir}/build/en/pdf/images"/>
    </target>

</project>
