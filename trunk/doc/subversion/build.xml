<?xml version="1.0" encoding="UTF-8"?>
<!--
Usage:
    build html(zh) output: ant html
    build pdf(zh) output:  ant pdf

    build html(en) output: ant html.en
    build pdf(en) output:  ant pdf.en

    build all output: ant all

Dependency:
    *) python 2.4+
    *) python-libxml2 2.6.27+
    *) xsltproc 1.1.20+
    *) gettext 0.16+
    *) jdk 1.4.2+

description:
    *) add dependency software
    *) copy build.tmpl.properties to build.properties, and adjust build.properties
    *) start building ...

TODO:
    *) Add Multi-Language support
    *) Add chm output
    *) ...

Author：
    *) Dongsheng Song <dongsheng.song@gmail.com>, 2007

-->
<project name="docbook" default="html">

    <!-- 加载属性文件 -->
    <!-- 注意：它由你根据自己的配置修改 build.tmpl.properties 而来 -->
    <property file="build.properties"/>

    <!-- 设置 DocBook 样式表 -->
    <property name="db.xsl.fopdf"         value="style/fo.xsl"/>
    <property name="db.xsl.fopdf.zh_CN"   value="style/zh_CN/fo.xsl"/>
    <!-- property name="db.xsl.html"          value="style/html.xsl"/ -->
    <property name="db.style.html"        value="style/styles.css"/>

    <!-- 配置 fop 的类路径 -->
    <path id="lib.classpath">
        <fileset dir="${fop.dir}/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <!-- 生成所有文档格式 -->
    <target name="all" depends="clean">
        <antcall target="html.en"/>
        <antcall target="pdf.en"/>
        <antcall target="html"/>
        <antcall target="pdf"/>
    </target>

    <!-- 删除构建产生的中间文件，和最终输出的文件 -->
    <target name="clean">
        <delete dir="build"/>
        <delete file="en/book/version.xml"/>
    </target>

    <!-- 根据模版文件 version.tmpl.xml，生成 version.xml -->
    <target name="version">
        <!-- Generate en/book/version.xml. -->
        <tstamp>
            <format property="build.time" pattern="yyyy-MM-dd HH:mm:ss Z"/>
        </tstamp>
        <!-- exec dir="en" executable="svnversion" outputproperty="build.version"/ -->
        <!-- filter token="build.version" value="${build.version}"/ -->
        <filter token="build.time" value="${build.time}"/>
        <copy file="version.tmpl.xml" tofile="en/book/version.xml" filtering="true" overwrite="true"/>
    </target>

    <!-- 将英文源文件合并，产生一个独立的源文件 -->
    <target name="profile" depends="version">
        <mkdir dir="build/en"/>
        <copy file="en/book/book.xml" tofile="en/book/book-svn.xml" overwrite="true"/>
        <copy file="book.xml" tofile="en/book/book.xml" overwrite="true"/>
        <exec dir="." executable="xsltproc">
            <arg value="--nonet"/>
            <arg value="--xinclude"/>
            <arg value="--output"/>
            <arg value="build/en/${doc.name}.xml"/>
            <arg value="style/profile.xsl"/>
            <arg value="en/book/book.xml"/>
        </exec>
        <move file="en/book/book-svn.xml" tofile="en/book/book.xml" overwrite="true"/>
    </target>

    <!-- 检查 pot 文件是否过时 -->
    <target name="pot.init" unless="pot.isUpToDate" >
        <uptodate property="pot.isUpToDate" targetfile="po/${doc.name}.pot">
            <srcfiles dir="en/book" includes="*.xml" excludes="book.xml, version.xml"/>
        </uptodate>
    </target>

    <!-- 根据英文源文件生成 pot 文件，合并中文翻译 -->
    <!-- 此任务在我的 PM-1.73 上耗时 6 分钟 -->
    <!-- For some xml2po bugs, this target should NOT run in Windows !-->
    <target name="pot" depends="pot.init,profile" unless="pot.isUpToDate" >
        <exec dir="." executable="python">
            <arg value="xml2po.py"/>
            <arg value="-e"/>
            <arg value="-o"/>
            <arg value="po/${doc.name}.pot"/>
            <arg value="build/en/${doc.name}.xml"/>
        </exec>
        <exec dir="." executable="msgmerge">
            <arg value="--no-wrap"/>
            <arg value="-o"/>
            <arg value="po/zh_CN-new.po"/>
            <arg value="po/zh_CN.po"/>
            <arg value="po/${doc.name}.pot"/>
        </exec>
        <move file="po/zh_CN-new.po" tofile="po/zh_CN.po"/>
    </target>

    <!-- 检查中文 DocBook 文件是否过时 -->
    <!-- For some xml2po bugs, pot target should NOT run in Windows !-->
    <!-- target name="translate.init" depends="pot" -->
    <target name="translate.init" depends="profile">
        <uptodate property="translate.isUpToDate" srcfile="po/zh_CN.po" targetfile="build/zh/${doc.name}.xml"/>
    </target>

    <!-- 根据英文源文件和中文 po 文件，产生中文 DocBook 文件 -->
    <!-- 此任务在我的 PM-1.73 上耗时 30 秒 -->
    <target name="translate" depends="translate.init" unless="translate.isUpToDate" >
        <mkdir dir="build/zh"/>
        <exec dir="." executable="msgfmt">
            <arg value="po/zh_CN.po"/>
            <arg value="-o"/>
            <arg value="po/zh_CN.mo"/>
        </exec>
        <exec dir="." executable="python">
            <arg value="xml2po.py"/>
            <arg value="-l"/>
            <arg value="zh-cn"/>
            <arg value="-t"/>
            <arg value="po/zh_CN.mo"/>
            <arg value="-o"/>
            <arg value="build/zh/${doc.name}.xml"/>
            <arg value="build/en/${doc.name}.xml"/>
        </exec>
    </target>

    <!-- 根据中文 DocBook 文件和样式表生成中文 html 文件 -->
    <!-- 此任务在我的 PM-1.73 上耗时 30 秒 -->
    <target name="html" depends="translate">

        <delete dir="build/zh/html"/>
        <mkdir dir="build/zh/html"/>

        <exec dir="build/zh/html" executable="xsltproc">
            <arg value="--nonet"/>
            <arg value="--xinclude"/>
            <arg value="../../../style/html.xsl"/>
            <arg value="../../../build/zh/${doc.name}.xml"/>
        </exec>

        <copy file="${db.style.html}" todir="build/zh/html"/>
        <copy todir="build/zh/html/images">
            <fileset dir="en/book/images" excludes="**/.svn, **/*.ppt"/>
        </copy>
    </target>

    <!-- 根据中文 DocBook 文件和样式表生成中文 pdf 文件 -->
    <!-- 此任务在我的 PM-1.73 上耗时 15 秒 -->
    <target name="pdf" depends="translate">

        <copy todir="build/zh/pdf/images">
            <fileset dir="en/book/images">
                <include name="**/*.png"/>
                <include name="**/*.svg"/>
                <include name="**/*.gif"/>
            </fileset>
        </copy>

        <copy todir="build/zh/pdf">
            <fileset dir="${fonts.dir}">
                <include name="*.ttf"/>
                <include name="*.ttc"/>
            </fileset>
            <fileset dir="${fop.dir}/conf">
                <include name="*"/>
            </fileset>
        </copy>

        <exec dir="." executable="xsltproc">
            <arg value="--nonet"/>
            <arg value="--xinclude"/>
            <arg value="--output"/>
            <arg value="build/zh/pdf/${doc.name}.fo"/>
            <arg value="${db.xsl.fopdf.zh_CN}"/>
            <arg value="build/zh/${doc.name}.xml"/>
        </exec>

        <java classname="org.apache.fop.apps.Fop" fork="true" dir="build/zh/pdf" maxmemory="512m" >
            <classpath refid="lib.classpath"/>
            <arg value="-c"/>
            <arg value="userconfig.xml"/>
            <arg value="${doc.name}.fo"/>
            <arg value="${doc.name}.pdf"/>
        </java>

        <delete>
            <fileset dir="build/zh/pdf" excludes="**/*.pdf, **/*.fo"/>
        </delete>
        <delete dir="build/zh/pdf/images"/>
    </target>

    <!-- 根据英文 DocBook 文件和样式表生成英文 html 文件 -->
    <target name="html.en" depends="version">
        <delete dir="build/en/html"/>
        <mkdir dir="build/en/html"/>

        <exec dir="build/en/html" executable="xsltproc">
            <arg value="--nonet"/>
            <arg value="--xinclude"/>
            <arg value="../../../style/html.xsl"/>
            <arg value="../../../en/book/book.xml"/>
        </exec>

        <copy file="${db.style.html}" todir="build/en/html"/>
        <copy todir="build/en/html/images">
            <fileset dir="en/book/images" excludes="**/.svn, **/*.ppt"/>
        </copy>
    </target>

    <!-- 根据英文 DocBook 文件和样式表生成英文 pdf 文件 -->
    <target name="pdf.en" depends="profile">

        <copy todir="build/en/pdf/images">
            <fileset dir="en/book/images">
                <include name="**/*.png"/>
                <include name="**/*.svg"/>
                <include name="**/*.gif"/>
            </fileset>
        </copy>

        <exec dir="." executable="xsltproc">
            <arg value="--nonet"/>
            <arg value="--xinclude"/>
            <arg value="--output"/>
            <arg value="build/en/pdf/${doc.name}.fo"/>
            <arg value="${db.xsl.fopdf}"/>
            <arg value="build/en/${doc.name}.xml"/>
        </exec>

        <java classname="org.apache.fop.apps.Fop" fork="true" dir="." maxmemory="512m" >
            <classpath refid="lib.classpath"/>
            <arg value="build/en/pdf/${doc.name}.fo"/>
            <arg value="build/en/pdf/${doc.name}.pdf"/>
        </java>

        <delete>
            <fileset dir="build/en/pdf" excludes="**/*.pdf, **/*.fo"/>
        </delete>
        <delete dir="build/en/pdf/images"/>
    </target>

</project>
