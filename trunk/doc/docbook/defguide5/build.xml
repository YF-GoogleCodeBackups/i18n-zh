<?xml version="1.0" encoding="UTF-8"?>
<!--
Usage:
    build html(zh) output: ant html
    build pdf(zh) output:  ant pdf

    build html(en) output: ant html.en
    build pdf(en) output:  ant pdf.en

    build all output: ant all

Dependency:
    *) python 2.4+
    *) python-libxml2 2.6.27+
    *) xsltproc 1.1.20+
    *) gettext 0.16+
    *) jdk 1.4.2+

description:
    *) add dependency software
    *) copy build.tmpl.properties to build.properties, and adjust build.properties
    *) start building ...

TODO:
    *) Add Multi-Language support
    *) Add chm output
    *) ...

Author：
    *) Dongsheng Song <dongsheng.song@gmail.com>, 2007

-->
<project name="docbook" default="html">

    <!-- 加载属性文件 -->
    <!-- 注意：它由你根据自己的配置修改 build.tmpl.properties 而来 -->
    <property file="build.properties"/>

    <!-- 设置 DocBook 样式表 -->
    <property name="db.xsl.fopdf"         value="${base.dir}/xsl/fo.xsl"/>
    <property name="db.xsl.fopdf.zh_CN"   value="${base.dir}/xsl/zh_CN/fo.xsl"/>
    <!-- property name="db.xsl.html"          value="${base.dir}/xsl/html.xsl"/ -->
    <property name="db.style.html"        value="${base.dir}/xsl/defguide.css"/>

    <!-- 配置 fop 的类路径 -->
    <path id="lib.classpath">
        <fileset dir="${fop.dir}/build">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${fop.dir}/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <!-- 生成所有文档格式 -->
    <target name="all" depends="clean">
        <antcall target="html.en"/>
        <antcall target="pdf.en"/>
        <antcall target="html"/>
        <antcall target="pdf"/>
    </target>

    <!-- 删除构建产生的中间文件，和最终输出的文件 -->
    <target name="clean">
        <delete dir="${base.dir}/build"/>
        <delete file="${base.dir}/en/bookinfo.xml"/>
    </target>

    <!-- 根据文件 VERSION.xml，生成 bookinfo.xml -->
    <target name="version">
        <!-- 暂时排除 elements reference -->
        <copy file="${base.dir}/list-elements.xml" todir="${base.dir}/en/refpages"/>

        <exec dir="${base.dir}" executable="xsltproc">
            <arg value="--nonet"/>
            <arg value="--xinclude"/>
            <arg value="--output"/>
            <arg value="${base.dir}/en/bookinfo.xml"/>
            <arg value="${base.dir}/en/VERSION.xml"/>
            <arg value="${base.dir}/en/VERSION.xml"/>
        </exec>
    </target>

    <!-- 将英文源文件合并，产生一个独立的源文件 -->
    <target name="profile" depends="version">
        <mkdir dir="${base.dir}/build/en"/>
        <exec dir="${base.dir}" executable="xsltproc">
            <arg value="--nonet"/>
            <arg value="--xinclude"/>
            <arg value="--output"/>
            <arg value="${base.dir}/build/en/${doc.name}.xml"/>
            <arg value="${base.dir}/xsl/profile.xsl"/>
            <arg value="${base.dir}/en/book.xml"/>
        </exec>
    </target>

    <!-- 检查 pot 文件是否过时 -->
    <target name="pot.init" unless="pot.isUpToDate" >
        <uptodate property="pot.isUpToDate" targetfile="${base.dir}/po/${doc.name}.pot">
            <srcfiles dir="${base.dir}/en" includes="book.xml, VERSION.xml"/>
            <srcfiles dir="${base.dir}/en/src" includes="*.xml"/>
            <srcfiles dir="${base.dir}/en/refpages" includes="*.xml"/>
        </uptodate>
    </target>

    <!-- 根据英文源文件生成 pot 文件，合并中文翻译 -->
    <!-- 此任务在我的 PM-1.73 上耗时 6 分钟 -->
    <target name="pot" depends="pot.init,profile" unless="pot.isUpToDate" >
        <copy todir="${base.dir}/build/en/figures">
            <fileset dir="${base.dir}/en/figures" includes="*.png"/>
        </copy>
        <exec dir="${base.dir}" executable="python">
            <arg value="xml2po.py"/>
            <arg value="-e"/>
            <arg value="-o"/>
            <arg value="${base.dir}/po/${doc.name}.pot"/>
            <arg value="${base.dir}/build/en/${doc.name}.xml"/>
        </exec>
        <exec dir="${base.dir}" executable="msgmerge">
            <arg value="--no-wrap"/>
            <arg value="-o"/>
            <arg value="${base.dir}/po/zh_CN.po.new"/>
            <arg value="${base.dir}/po/zh_CN.po"/>
            <arg value="${base.dir}/po/${doc.name}.pot"/>
        </exec>
        <move file="${base.dir}/po/zh_CN.po.new" tofile="${base.dir}/po/zh_CN.po"/>
    </target>

    <!-- 检查中文 DocBook 文件是否过时 -->
    <target name="translate.init" depends="pot">
        <uptodate property="translate.isUpToDate" srcfile="${base.dir}/po/zh_CN.po" targetfile="${base.dir}/build/zh/${doc.name}.xml"/>
    </target>

    <!-- 根据英文源文件和中文 po 文件，产生中文 DocBook 文件 -->
    <!-- 此任务在我的 PM-1.73 上耗时 30 秒 -->
    <target name="translate" depends="translate.init" unless="translate.isUpToDate" >
        <mkdir dir="${base.dir}/build/zh"/>
        <exec dir="${base.dir}" executable="msgfmt">
            <arg value="${base.dir}/po/zh_CN.po"/>
            <arg value="-o"/>
            <arg value="${base.dir}/po/zh_CN.mo"/>
        </exec>
        <exec dir="${base.dir}" executable="python">
            <arg value="xml2po.py"/><!--
            <arg value="-l"/>
            <arg value="zh-cn"/> -->
            <arg value="-t"/>
            <arg value="${base.dir}/po/zh_CN.mo"/>
            <arg value="-o"/>
            <arg value="${base.dir}/build/zh/${doc.name}.xml"/>
            <arg value="${base.dir}/build/en/${doc.name}.xml"/>
        </exec>
    </target>

    <!-- 根据中文 DocBook 文件和样式表生成中文 html 文件 -->
    <!-- 此任务在我的 PM-1.73 上耗时 30 秒 -->
    <target name="html" depends="translate">
        <delete dir="${base.dir}/build/zh/html"/>
        <mkdir dir="${base.dir}/build/zh/html"/>

        <java classname="com.icl.saxon.StyleSheet" fork="true"
                dir="${base.dir}/build/zh/html" maxmemory="512m" >
            <classpath refid="lib.classpath"/>
            <arg value="${basedir}/build/zh/${doc.name}.xml"/>
            <arg value="${basedir}/xsl/html.xsl"/>
        </java>

        <copy file="${db.style.html}" todir="${base.dir}/build/zh/html"/>
    </target>

    <!-- 根据中文 DocBook 文件和样式表生成中文 pdf 文件 -->
    <!-- 此任务在我的 PM-1.73 上耗时 15 秒 -->
    <target name="pdf" depends="translate">
        <copy todir="${base.dir}/build/zh/pdf">
            <fileset dir="${fonts.dir}">
                <include name="*.ttf"/>
                <include name="*.ttc"/>
            </fileset>
            <fileset dir="${fop.dir}/conf">
                <include name="*.xml"/>
            </fileset>
        </copy>

        <java classname="com.icl.saxon.StyleSheet" fork="true"
                dir="${basedir}" maxmemory="512m" >
            <classpath refid="lib.classpath"/>
            <arg value="-o"/>
            <arg value="${base.dir}/build/zh/pdf/${doc.name}.fo"/>
            <arg value="${base.dir}/build/zh/${doc.name}.xml"/>
            <arg value="${db.xsl.fopdf.zh_CN}"/>
        </java>

        <java classname="org.apache.fop.cli.Main" fork="true" dir="${base.dir}/build/zh/pdf" maxmemory="512m" >
            <classpath refid="lib.classpath"/>
            <arg value="-c"/>
            <arg value="userconfig.xml"/>
            <arg value="${doc.name}.fo"/>
            <arg value="${doc.name}.pdf"/>
        </java>

        <delete>
            <fileset dir="${base.dir}/build/zh/pdf" excludes="**/*.pdf, **/*.fo"/>
        </delete>
    </target>

    <!-- 根据英文 DocBook 文件和样式表生成英文 html 文件 -->
    <target name="html.en" depends="profile">
        <delete dir="${base.dir}/build/en/html"/>
        <mkdir dir="${base.dir}/build/en/html"/>

        <java classname="com.icl.saxon.StyleSheet" fork="true"
                dir="${base.dir}/build/en/html" maxmemory="512m" >
            <classpath refid="lib.classpath"/>
            <arg value="${basedir}/build/en/${doc.name}.xml"/>
            <arg value="${basedir}/xsl/html.xsl"/>
        </java>

        <copy file="${db.style.html}" todir="${base.dir}/build/en/html"/>
    </target>

    <!-- 根据英文 DocBook 文件和样式表生成英文 pdf 文件 -->
    <target name="pdf.en" depends="profile">
        <java classname="com.icl.saxon.StyleSheet" fork="true"
                dir="${basedir}" maxmemory="512m" >
            <classpath refid="lib.classpath"/>
            <arg value="-o"/>
            <arg value="${base.dir}/build/en/pdf/${doc.name}.fo"/>
            <arg value="${base.dir}/build/en/${doc.name}.xml"/>
            <arg value="${db.xsl.fopdf}"/>
        </java>

        <java classname="org.apache.fop.cli.Main" fork="true"
                dir="${base.dir}" maxmemory="512m" >
            <classpath refid="lib.classpath"/>
            <arg value="${base.dir}/build/en/pdf/${doc.name}.fo"/>
            <arg value="${base.dir}/build/en/pdf/${doc.name}.pdf"/>
        </java>

        <delete>
            <fileset dir="${base.dir}/build/en/pdf" excludes="**/*.pdf, **/*.fo"/>
        </delete>
    </target>

</project>
