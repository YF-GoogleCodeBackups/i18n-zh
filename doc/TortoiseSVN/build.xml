<?xml version="1.0" encoding="UTF-8"?>
<!--
Usage:
    build html(zh) output: ant html
    build pdf(zh) output:  ant pdf

    build html(en) output: ant html.en
    build pdf(en) output:  ant pdf.en

    build all output: ant all
-->
<project name="docbook" default="pdf.en">

    <property file="build.properties"/>

    <path id="lib.classpath">
        <fileset dir="${fop.dir}/build">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${fop.dir}/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <target name="all" depends="clean">
        <antcall target="pdf.en"/>
        <antcall target="pdf"/>
        <antcall target="html.en"/>
        <antcall target="html"/>
    </target>

    <target name="clean">
        <delete dir="${base.dir}/build"/>
        <delete file="${source.dir}/en/book/version.xml"/>
    </target>

    <target name="version">
        <tstamp>
            <format property="build.time" pattern="yyyy-MM-dd HH:mm:ss Z"/>
        </tstamp>
        <exec dir="${source.dir}/.." executable="svnversion" outputproperty="build.version"/>
        <filter token="build.version" value="${build.version}"/>
        <filter token="build.time" value="${build.time}"/>
        <copy file="version.tmpl.xml" tofile="${source.dir}/en/version.xml" filtering="true" overwrite="true"/>
        <copy file="pubdate.tmpl.xml" tofile="${source.dir}/en/pubdate.xml" filtering="true" overwrite="true"/>
    </target>

    <target name="profile" depends="version">
        <mkdir dir="${base.dir}/build/en/${doc.name}"/>
        <!-- java classname="com.icl.saxon.StyleSheet">
            <classpath refid="lib.classpath"/>
            <arg value="-o"/>
            <arg value="${base.dir}/build/en/${doc.name}/${doc.name}.xml"/>
            <arg value="${source.dir}/en/TortoiseSVN/tortoisesvn.xml"/>
            <arg value="${base.dir}/style/profile.xsl"/>
        </java -->
        <exec dir="${base.dir}" executable="xsltproc">
            <arg value="--nonet"/>
            <arg value="--xinclude"/>
            <arg value="--output"/>
            <arg value="${base.dir}/build/en/${doc.name}/${doc.name}.xml"/>
            <arg value="style/profile.xsl"/>
            <arg value="${source.dir}/en/TortoiseSVN/tortoisesvn.xml"/>
        </exec>
    </target>

    <target name="pot.init" unless="pot.isUpToDate" >
        <uptodate property="pot.isUpToDate" targetfile="${base.dir}/po/${doc.name}.pot">
            <srcfiles dir="${source.dir}/en" includes="glossary.xml, wishlist.xml"/>
            <srcfiles dir="${source.dir}/en/TortoiseSVN" includes="**/*.xml"/>
        </uptodate>
    </target>

    <target name="pot" depends="pot.init,profile" unless="pot.isUpToDate" >
        <exec dir="${base.dir}" executable="python">
            <arg value="xml2po.py"/>
            <arg value="-e"/>
            <arg value="-o"/>
            <arg value="${base.dir}/po/${doc.name}.pot"/>
            <arg value="${base.dir}/build/en/${doc.name}/${doc.name}.xml"/>
        </exec>
        <exec dir="${base.dir}" executable="msgmerge">
            <arg value="--no-wrap"/>
            <arg value="-o"/>
            <arg value="${base.dir}/po/${doc.name}-zh_CN-new.po"/>
            <arg value="${base.dir}/po/${doc.name}-zh_CN.po"/>
            <arg value="${base.dir}/po/${doc.name}.pot"/>
        </exec>
        <move file="${base.dir}/po/${doc.name}-zh_CN-new.po" tofile="${base.dir}/po/${doc.name}-zh_CN.po"/>
    </target>

    <target name="translate.init" depends="pot">
        <uptodate property="translate.isUpToDate" srcfile="${base.dir}/po/zh_CN.po" targetfile="${base.dir}/build/zh/${doc.name}.xml"/>
    </target>

    <target name="translate" depends="translate.init" unless="translate.isUpToDate" >
        <mkdir dir="${base.dir}/build/zh/${doc.name}"/>
        <exec dir="${base.dir}" executable="msgfmt">
            <arg value="${base.dir}/po/${doc.name}-zh_CN.po"/>
            <arg value="-o"/>
            <arg value="${base.dir}/po/${doc.name}-zh_CN.mo"/>
        </exec>
        <exec dir="${base.dir}" executable="python">
            <arg value="xml2po.py"/>
            <arg value="-l"/>
            <arg value="zh-cn"/>
            <arg value="-t"/>
            <arg value="${base.dir}/po/${doc.name}-zh_CN.mo"/>
            <arg value="-o"/>
            <arg value="${base.dir}/build/zh/${doc.name}/${doc.name}.xml"/>
            <arg value="${base.dir}/build/en/${doc.name}/${doc.name}.xml"/>
        </exec>
    </target>

    <target name="html" depends="translate">

        <delete dir="${base.dir}/build/zh/${doc.name}/html"/>
        <mkdir dir="${base.dir}/build/zh/${doc.name}/html"/>

        <exec dir="${base.dir}/build/zh/${doc.name}/html" executable="xsltproc">
            <arg value="--nonet"/>
            <arg value="../../../../style/html.xsl"/>
            <arg value="../${doc.name}.xml"/>
        </exec>

        <copy file="style/styles.css" todir="${base.dir}/build/zh/${doc.name}/html"/>

        <copy todir="${base.dir}/build/zh/${doc.name}/html/images">
            <fileset dir="${source.dir}/../images/en" includes="**/*.png,**/*.svg,**/*.gif"/>
        </copy>
    </target>

    <target name="pdf" depends="translate">

        <copy todir="${base.dir}/build/zh/${doc.name}/pdf/images">
            <fileset dir="${source.dir}/../images/en">
                <include name="**/*.png"/>
                <include name="**/*.svg"/>
                <include name="**/*.gif"/>
            </fileset>
        </copy>

        <copy todir="${base.dir}/build/zh/${doc.name}/pdf">
            <fileset dir="${fonts.dir}">
                <include name="*.ttf"/>
                <include name="*.ttc"/>
            </fileset>
            <fileset dir="${fop.dir}/conf">
                <include name="*"/>
            </fileset>
        </copy>

        <java classname="com.icl.saxon.StyleSheet" fork="true" dir="${base.dir}" maxmemory="512m">
            <classpath refid="lib.classpath"/>
            <arg value="-o"/>
            <arg value="${base.dir}/build/zh/${doc.name}/pdf/${doc.name}.fo"/>
            <arg value="${base.dir}/build/zh/${doc.name}/${doc.name}.xml"/>
            <arg value="style/zh_CN/fo.xsl"/>
        </java>

        <java classname="org.apache.fop.cli.Main" fork="true" dir="${base.dir}/build/zh/${doc.name}/pdf" maxmemory="512m" >
            <classpath refid="lib.classpath"/>
            <arg value="-c"/>
            <arg value="userconfig.xml"/>
            <arg value="${doc.name}.fo"/>
            <arg value="${doc.name}.pdf"/>
        </java>

        <delete>
            <fileset dir="${base.dir}/build/zh/${doc.name}/pdf" excludes="**/*.pdf, **/*.fo"/>
        </delete>
        <delete dir="${base.dir}/build/zh/${doc.name}/pdf/images"/>
    </target>


    <target name="pdf.en" depends="profile">

        <copy todir="${base.dir}/build/en/${doc.name}/pdf/images">
            <fileset dir="${source.dir}/../images/en">
                <include name="**/*.png"/>
                <include name="**/*.svg"/>
                <include name="**/*.gif"/>
            </fileset>
        </copy>

        <java classname="com.icl.saxon.StyleSheet" fork="true" dir="${base.dir}" maxmemory="512m">
            <classpath refid="lib.classpath"/>
            <arg value="-o"/>
            <arg value="${base.dir}/build/en/${doc.name}/pdf/${doc.name}.fo"/>
            <arg value="${base.dir}/build/en/${doc.name}/${doc.name}.xml"/>
            <arg value="style/fo.xsl"/>
        </java>

        <java classname="org.apache.fop.cli.Main" fork="true" dir="${base.dir}" maxmemory="512m" >
            <classpath refid="lib.classpath"/>
            <arg value="${base.dir}/build/en/${doc.name}/pdf/${doc.name}.fo"/>
            <arg value="${base.dir}/build/en/${doc.name}/pdf/${doc.name}.pdf"/>
        </java>

        <delete>
            <fileset dir="${base.dir}/build/en/${doc.name}/pdf" excludes="**/*.pdf, **/*.fo"/>
        </delete>
        <delete dir="${base.dir}/build/en/${doc.name}/pdf/images"/>
    </target>

    <target name="html.en" depends="profile">

        <delete dir="${base.dir}/build/en/${doc.name}/html"/>
        <mkdir dir="${base.dir}/build/en/${doc.name}/html"/>

        <exec dir="${base.dir}/build/en/${doc.name}/html" executable="xsltproc">
            <arg value="--nonet"/>
            <arg value="../../../../style/html.xsl"/>
            <arg value="../${doc.name}.xml"/>
        </exec>

        <copy file="style/styles.css" todir="${base.dir}/build/en/${doc.name}/html"/>

        <copy todir="${base.dir}/build/en/${doc.name}/html/images">
            <fileset dir="${source.dir}/../images/en" includes="**/*.png,**/*.svg,**/*.gif"/>
        </copy>
    </target>

</project>
